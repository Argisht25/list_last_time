{"ast":null,"code":"var _jsxFileName = \"/home/argisht/Desktop/todo/src/Components/listItems/ListItem.js\";\nimport it from './ListItem.module.css';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nfunction Listitem(_ref) {\n  let {\n    todos,\n    onChange,\n    Removed\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: \"droppable-1\",\n    children: (provided, _) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: it.mapValue,\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      children: [todos.map((todo, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: \"draggable-\" + todo.id,\n            index: i,\n            children: (provided, snapshot) => /*#__PURE__*/_createElement(\"div\", { ...provided.dragHandleProps,\n              ...provided.draggableProps,\n              className: it.todo_item,\n              ref: provided.innerRef,\n              style: { ...provided.draggableProps.style,\n                boxShadow: snapshot.isDragging ? \"0 0 .4rem #666\" : \"none\"\n              },\n              key: todo.id,\n              onClick: () => {\n                onChange({ ...todo,\n                  isCompleted: !todo.isCompleted\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: it.leftItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${it.check_Btn} ${todo.isCompleted && it.checked_Btn}`,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: it.check_Icon,\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${it.status} ${todo.isCompleted && it.completed}`,\n                children: todo.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: it.data,\n                children: todo.currentTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: it.removeBut,\n              onClick: () => Removed(todo.id),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: it.remove,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 33\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this);\n      }), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Listitem;\nexport default Listitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listitem\");","map":{"version":3,"names":["it","faCheck","FontAwesomeIcon","Draggable","Droppable","Listitem","todos","onChange","Removed","provided","_","mapValue","innerRef","droppableProps","map","todo","i","id","snapshot","dragHandleProps","draggableProps","todo_item","style","boxShadow","isDragging","isCompleted","leftItem","check_Btn","checked_Btn","check_Icon","status","completed","text","data","currentTime","removeBut","remove","placeholder"],"sources":["/home/argisht/Desktop/todo/src/Components/listItems/ListItem.js"],"sourcesContent":["import it from './ListItem.module.css'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\n\nfunction Listitem({ todos, onChange, Removed }) {\n\n    return (\n        <Droppable droppableId=\"droppable-1\" >\n            {(provided, _) => (\n                <div className={it.mapValue}\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                >\n                    {todos.map((todo, i) => {\n                        return (\n                            <div key={todo.id} >\n                                <Draggable draggableId={\"draggable-\" + todo.id} index={i}>\n                                    {(provided, snapshot) => (\n                                        <div {...provided.dragHandleProps} {...provided.draggableProps} className={it.todo_item}\n                                            ref={provided.innerRef}\n\n                                            style={{\n                                                ...provided.draggableProps.style,\n                                                boxShadow: snapshot.isDragging ? \"0 0 .4rem #666\" : \"none\",\n                                                                                            }}\n\n                                            key={todo.id} onClick={() => {\n                                                onChange({\n                                                    ...todo,\n                                                    isCompleted: !todo.isCompleted,\n                                                })\n                                            }} >\n                                            <div className={it.leftItem}   >\n                                                <div className={`${it.check_Btn} ${todo.isCompleted && it.checked_Btn}`}  >\n                                                    <FontAwesomeIcon className={it.check_Icon} icon={faCheck} />\n                                                </div>\n                                                <div className={`${it.status} ${todo.isCompleted && it.completed}`} >\n                                                    {todo.text}\n                                                </div>\n                                                <div className={it.data} >\n                                                    {todo.currentTime}\n                                                </div>\n                                            </div>\n                                            <div className={it.removeBut} onClick={() => Removed(todo.id)}>\n                                                <p className={it.remove} >x</p>\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </Draggable>\n\n                            </div>\n                        )\n                    })}\n                    {provided.placeholder}\n                </div>\n            )}\n\n        </Droppable>\n    )\n}\nexport default Listitem\n\n"],"mappings":";AAAA,OAAOA,EAAP,MAAe,uBAAf;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;;;;AAGA,SAASC,QAAT,OAAgD;EAAA,IAA9B;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAA8B;EAE5C,oBACI,QAAC,SAAD;IAAW,WAAW,EAAC,aAAvB;IAAA,UACK,CAACC,QAAD,EAAWC,CAAX,kBACG;MAAK,SAAS,EAAEV,EAAE,CAACW,QAAnB;MACI,GAAG,EAAEF,QAAQ,CAACG,QADlB;MAAA,GAEQH,QAAQ,CAACI,cAFjB;MAAA,WAIKP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;QACpB,oBACI;UAAA,uBACI,QAAC,SAAD;YAAW,WAAW,EAAE,eAAeD,IAAI,CAACE,EAA5C;YAAgD,KAAK,EAAED,CAAvD;YAAA,UACK,CAACP,QAAD,EAAWS,QAAX,kBACG,2BAAST,QAAQ,CAACU,eAAlB;cAAA,GAAuCV,QAAQ,CAACW,cAAhD;cAAgE,SAAS,EAAEpB,EAAE,CAACqB,SAA9E;cACI,GAAG,EAAEZ,QAAQ,CAACG,QADlB;cAGI,KAAK,EAAE,EACH,GAAGH,QAAQ,CAACW,cAAT,CAAwBE,KADxB;gBAEHC,SAAS,EAAEL,QAAQ,CAACM,UAAT,GAAsB,gBAAtB,GAAyC;cAFjD,CAHX;cAQI,GAAG,EAAET,IAAI,CAACE,EARd;cAQkB,OAAO,EAAE,MAAM;gBACzBV,QAAQ,CAAC,EACL,GAAGQ,IADE;kBAELU,WAAW,EAAE,CAACV,IAAI,CAACU;gBAFd,CAAD,CAAR;cAIH,CAbL;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,gBAcI;cAAK,SAAS,EAAEzB,EAAE,CAAC0B,QAAnB;cAAA,wBACI;gBAAK,SAAS,EAAG,GAAE1B,EAAE,CAAC2B,SAAU,IAAGZ,IAAI,CAACU,WAAL,IAAoBzB,EAAE,CAAC4B,WAAY,EAAtE;gBAAA,uBACI,QAAC,eAAD;kBAAiB,SAAS,EAAE5B,EAAE,CAAC6B,UAA/B;kBAA2C,IAAI,EAAE5B;gBAAjD;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII;gBAAK,SAAS,EAAG,GAAED,EAAE,CAAC8B,MAAO,IAAGf,IAAI,CAACU,WAAL,IAAoBzB,EAAE,CAAC+B,SAAU,EAAjE;gBAAA,UACKhB,IAAI,CAACiB;cADV;gBAAA;gBAAA;gBAAA;cAAA,QAJJ,eAOI;gBAAK,SAAS,EAAEhC,EAAE,CAACiC,IAAnB;gBAAA,UACKlB,IAAI,CAACmB;cADV;gBAAA;gBAAA;gBAAA;cAAA,QAPJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAdJ,eAyBI;cAAK,SAAS,EAAElC,EAAE,CAACmC,SAAnB;cAA8B,OAAO,EAAE,MAAM3B,OAAO,CAACO,IAAI,CAACE,EAAN,CAApD;cAAA,uBACI;gBAAG,SAAS,EAAEjB,EAAE,CAACoC,MAAjB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QAzBJ;UAFR;YAAA;YAAA;YAAA;UAAA;QADJ,GAAUrB,IAAI,CAACE,EAAf;UAAA;UAAA;UAAA;QAAA,QADJ;MAuCH,CAxCA,CAJL,EA6CKR,QAAQ,CAAC4B,WA7Cd;IAAA;MAAA;MAAA;MAAA;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAsDH;;KAxDQhC,Q;AAyDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}