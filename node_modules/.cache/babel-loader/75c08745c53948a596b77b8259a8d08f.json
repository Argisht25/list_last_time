{"ast":null,"code":"var _jsxFileName = \"/home/argisht/Desktop/todo/src/Components/listItems/ListItem.js\";\nimport it from './ListItem.module.css';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Listitem(_ref) {\n  let {\n    todos,\n    onChange,\n    Removed\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: it.mapValue,\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: function () {\n        for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n          props[_key] = arguments[_key];\n        }\n\n        console.log(props);\n      },\n      children: todos.map((todo, i) => {\n        return /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable-1\",\n          children: (provided, _) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: 'draggable-' + todo.id,\n            index: i,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: it.todo_item,\n              onClick: () => {\n                onChange({ ...todo,\n                  isCompleted: !todo.isCompleted\n                });\n              },\n              children: [(provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: it.leftItem,\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${it.check_Btn} ${todo.isCompleted && it.checked_Btn}`,\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    className: it.check_Icon,\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${it.status} ${todo.isCompleted && it.completed}`,\n                  ...provided.dragHandleProps,\n                  children: todo.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: it.data,\n                  children: todo.currentTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: it.removeBut,\n                onClick: () => {\n                  Removed(todo.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: it.remove,\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this)\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 4\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Listitem;\nexport default Listitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listitem\");","map":{"version":3,"names":["it","faCheck","FontAwesomeIcon","DragDropContext","Droppable","Draggable","Listitem","todos","onChange","Removed","mapValue","props","console","log","map","todo","i","provided","_","id","innerRef","droppableProps","todo_item","isCompleted","snapshot","leftItem","draggableProps","check_Btn","checked_Btn","check_Icon","status","completed","dragHandleProps","text","data","currentTime","removeBut","remove"],"sources":["/home/argisht/Desktop/todo/src/Components/listItems/ListItem.js"],"sourcesContent":["import it from './ListItem.module.css'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n\nfunction Listitem({ todos, onChange, Removed }) {\n\n    return (\n\n        <div className={it.mapValue} >\n            <DragDropContext\n                onDragEnd={(...props) => { console.log(props) }}>\n                {todos.map((todo, i) => {\n\n                    return (\n                        <Droppable droppableId=\"droppable-1\" key={todo.id}>\n                            {(provided, _) => (\n   <Draggable key={todo.id} draggableId={'draggable-' + todo.id} index={i}>\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                    className={it.todo_item} onClick={() => {\n                                        onChange({\n                                            ...todo,\n                                            isCompleted: !todo.isCompleted,\n                                        })\n                                    }} >\n                                 \n                                        {(provided, snapshot) => (\n                                            <div className={it.leftItem} ref={provided.innerRef}\n                                                {...provided.draggableProps}>\n\n                                                <div className={`${it.check_Btn} ${todo.isCompleted && it.checked_Btn}`} >\n                                                    <FontAwesomeIcon className={it.check_Icon} icon={faCheck} />\n                                                </div>\n\n                                                <div className={`${it.status} ${todo.isCompleted && it.completed}`}\n                                                    {...provided.dragHandleProps}>\n                                                    {todo.text}\n                                                </div>\n                                                <div className={it.data} >\n                                                    {todo.currentTime}\n                                                </div>\n                                            </div>\n                                        )}\n\n\n                                        <div className={it.removeBut} onClick={() => {\n                                            Removed(todo.id)\n                                        }}><p className={it.remove} >x</p>\n                                        </div>\n                                   \n                                </div>\n                                </Draggable>\n                            )}\n\n                        </Droppable>\n                    )\n                })}\n            </DragDropContext>\n        </div>\n\n    )\n}\nexport default Listitem\n\n"],"mappings":";AAAA,OAAOA,EAAP,MAAe,uBAAf;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;;AAGA,SAASC,QAAT,OAAgD;EAAA,IAA9B;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAA8B;EAE5C,oBAEI;IAAK,SAAS,EAAET,EAAE,CAACU,QAAnB;IAAA,uBACI,QAAC,eAAD;MACI,SAAS,EAAE,YAAc;QAAA,kCAAVC,KAAU;UAAVA,KAAU;QAAA;;QAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MAAoB,CADnD;MAAA,UAEKJ,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;QAEpB,oBACI,QAAC,SAAD;UAAW,WAAW,EAAC,aAAvB;UAAA,UACK,CAACC,QAAD,EAAWC,CAAX,kBAC1B,QAAC,SAAD;YAAyB,WAAW,EAAE,eAAeH,IAAI,CAACI,EAA1D;YAA8D,KAAK,EAAEH,CAArE;YAAA,uBAC6B;cACI,GAAG,EAAEC,QAAQ,CAACG,QADlB;cAAA,GAEQH,QAAQ,CAACI,cAFjB;cAGI,SAAS,EAAErB,EAAE,CAACsB,SAHlB;cAG6B,OAAO,EAAE,MAAM;gBACpCd,QAAQ,CAAC,EACL,GAAGO,IADE;kBAELQ,WAAW,EAAE,CAACR,IAAI,CAACQ;gBAFd,CAAD,CAAR;cAIH,CARL;cAAA,WAUS,CAACN,QAAD,EAAWO,QAAX,kBACG;gBAAK,SAAS,EAAExB,EAAE,CAACyB,QAAnB;gBAA6B,GAAG,EAAER,QAAQ,CAACG,QAA3C;gBAAA,GACQH,QAAQ,CAACS,cADjB;gBAAA,wBAGI;kBAAK,SAAS,EAAG,GAAE1B,EAAE,CAAC2B,SAAU,IAAGZ,IAAI,CAACQ,WAAL,IAAoBvB,EAAE,CAAC4B,WAAY,EAAtE;kBAAA,uBACI,QAAC,eAAD;oBAAiB,SAAS,EAAE5B,EAAE,CAAC6B,UAA/B;oBAA2C,IAAI,EAAE5B;kBAAjD;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA,QAHJ,eAOI;kBAAK,SAAS,EAAG,GAAED,EAAE,CAAC8B,MAAO,IAAGf,IAAI,CAACQ,WAAL,IAAoBvB,EAAE,CAAC+B,SAAU,EAAjE;kBAAA,GACQd,QAAQ,CAACe,eADjB;kBAAA,UAEKjB,IAAI,CAACkB;gBAFV;kBAAA;kBAAA;kBAAA;gBAAA,QAPJ,eAWI;kBAAK,SAAS,EAAEjC,EAAE,CAACkC,IAAnB;kBAAA,UACKnB,IAAI,CAACoB;gBADV;kBAAA;kBAAA;kBAAA;gBAAA,QAXJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAXZ,eA6BQ;gBAAK,SAAS,EAAEnC,EAAE,CAACoC,SAAnB;gBAA8B,OAAO,EAAE,MAAM;kBACzC3B,OAAO,CAACM,IAAI,CAACI,EAAN,CAAP;gBACH,CAFD;gBAAA,uBAEG;kBAAG,SAAS,EAAEnB,EAAE,CAACqC,MAAjB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFH;gBAAA;gBAAA;gBAAA;cAAA,QA7BR;YAAA;cAAA;cAAA;cAAA;YAAA;UAD7B,GAAgBtB,IAAI,CAACI,EAArB;YAAA;YAAA;YAAA;UAAA;QAFqB,GAA0CJ,IAAI,CAACI,EAA/C;UAAA;UAAA;UAAA;QAAA,QADJ;MA4CH,CA9CA;IAFL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QAFJ;AAwDH;;KA1DQb,Q;AA2DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}