{"ast":null,"code":"var _jsxFileName = \"/home/argisht/Desktop/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Listitem from './listItems/list_information';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [editMode, setEditMode] = useState(t);\n  const [value, setValue] = useState(\"\");\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: \"Nod JS\",\n    isCompleted: false\n  }, {\n    id: 2,\n    text: \"Work\",\n    isCompleted: false\n  }, {\n    id: 3,\n    text: \"Nod JS\",\n    isCompleted: false\n  }]);\n\n  function Add() {\n    if (value === '') {\n      return;\n    }\n\n    return setTodos([...todos, {\n      id: todos.length + 1,\n      text: value,\n      isCompleted: false\n    }]), setValue(\"\");\n  }\n\n  function Removed(id) {\n    return setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo_App\",\n        children: /*#__PURE__*/_jsxDEV(Listitem, {\n          todos: todos,\n          Removed: Removed,\n          onChange: newTodo => {\n            setTodos(todos.map(todo => {\n              if (todo.id === newTodo.id) {\n                return newTodo;\n              } else {\n                return todo;\n              }\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: val => {\n          setValue(val.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Add,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0UmGjlByU1yax18+VwMgrsVXBow=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Listitem","App","editMode","setEditMode","t","value","setValue","todos","setTodos","id","text","isCompleted","Add","length","Removed","filter","todo","newTodo","map","val","target"],"sources":["/home/argisht/Desktop/todo/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'\nimport Listitem from './listItems/list_information';\n\n\nfunction App() {\n\n  const [editMode, setEditMode] = useState(t)\n\n\n  const [value, setValue] = useState(\"\")\n\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: \"Nod JS\",\n      isCompleted: false\n    },\n    {\n      id: 2,\n      text: \"Work\",\n      isCompleted: false\n\n    },\n    {\n      id: 3,\n      text: \"Nod JS\",\n      isCompleted: false\n    }\n  ])\n  function Add() {\n    if (value === '') {\n      return\n    }\n    return (\n\n      setTodos([\n        ...todos,\n        {\n          id: todos.length + 1,\n          text: value,\n          isCompleted: false\n        }\n      ]),\n      setValue(\"\")\n    )\n\n  }\n\n  function Removed(id) {\n       return (\n      setTodos(todos.filter((todo) => \n        todo.id !== id\n      ))\n    )\n  }\n\n\n  return (\n    <div className='wrapper'>\n      <div className='box'>\n        <div className=\"todo_App\">\n          <Listitem todos={todos} Removed={Removed} onChange={(newTodo) => {\n            setTodos(todos.map((todo) => {\n              if (todo.id === newTodo.id) {\n                return newTodo\n              } else {\n                return todo\n              }\n            }))\n          }} />\n        </div>\n        <input value={value} onChange={(val) => {\n          setValue(val.target.value)\n        }} />\n        <button onClick={Add}>Add</button>\n      </div>\n    </div>\n\n\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,8BAArB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAACK,CAAD,CAAxC;EAGA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CACjC;IACEU,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,QAFR;IAGEC,WAAW,EAAE;EAHf,CADiC,EAMjC;IACEF,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,MAFR;IAGEC,WAAW,EAAE;EAHf,CANiC,EAYjC;IACEF,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,QAFR;IAGEC,WAAW,EAAE;EAHf,CAZiC,CAAD,CAAlC;;EAkBA,SAASC,GAAT,GAAe;IACb,IAAIP,KAAK,KAAK,EAAd,EAAkB;MAChB;IACD;;IACD,OAEEG,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;MACEE,EAAE,EAAEF,KAAK,CAACM,MAAN,GAAe,CADrB;MAEEH,IAAI,EAAEL,KAFR;MAGEM,WAAW,EAAE;IAHf,CAFO,CAAD,CAAR,EAQAL,QAAQ,CAAC,EAAD,CAVV;EAaD;;EAED,SAASQ,OAAT,CAAiBL,EAAjB,EAAqB;IAChB,OACDD,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAcC,IAAD,IACpBA,IAAI,CAACP,EAAL,KAAYA,EADL,CAAD,CADP;EAKJ;;EAGD,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,QAAD;UAAU,KAAK,EAAEF,KAAjB;UAAwB,OAAO,EAAEO,OAAjC;UAA0C,QAAQ,EAAGG,OAAD,IAAa;YAC/DT,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAWF,IAAD,IAAU;cAC3B,IAAIA,IAAI,CAACP,EAAL,KAAYQ,OAAO,CAACR,EAAxB,EAA4B;gBAC1B,OAAOQ,OAAP;cACD,CAFD,MAEO;gBACL,OAAOD,IAAP;cACD;YACF,CANQ,CAAD,CAAR;UAOD;QARD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAO,KAAK,EAAEX,KAAd;QAAqB,QAAQ,EAAGc,GAAD,IAAS;UACtCb,QAAQ,CAACa,GAAG,CAACC,MAAJ,CAAWf,KAAZ,CAAR;QACD;MAFD;QAAA;QAAA;QAAA;MAAA,QAZF,eAeE;QAAQ,OAAO,EAAEO,GAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GA5EQX,G;;KAAAA,G;AA8ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}