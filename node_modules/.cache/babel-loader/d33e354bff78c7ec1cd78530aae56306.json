{"ast":null,"code":"var _jsxFileName = \"/home/argisht/Desktop/todo/src/Components/lists/Lists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport InputCreate from '../InputCreate/InputCreate';\nimport Listitem from '../listItems/ListItem';\nimport ap from './lists.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists(_ref) {\n  _s();\n\n  let {\n    dataValue,\n    todos,\n    Removed,\n    setTodos,\n    editMode,\n    value,\n    setValue,\n    Add,\n    setEditMode,\n    inProgress,\n    completed\n  } = _ref;\n  const [warning, setWarning] = React.useState(false);\n\n  function KeyDown(evt) {\n    if (evt.key === \"Enter\" && !warning) {\n      Add();\n      setWarning(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ap.box\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lists, \"Y6qp7ZygHCkBq+FEt+LIxLed5/A=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","Routes","Route","InputCreate","Listitem","ap","Lists","dataValue","todos","Removed","setTodos","editMode","value","setValue","Add","setEditMode","inProgress","completed","warning","setWarning","useState","KeyDown","evt","key","box"],"sources":["/home/argisht/Desktop/todo/src/Components/lists/Lists.js"],"sourcesContent":["\nimport React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport InputCreate from '../InputCreate/InputCreate'\nimport Listitem from '../listItems/ListItem'\nimport ap from './lists.module.css'\n\n\n\n\nexport default function Lists({dataValue, todos, Removed, setTodos, editMode, value, setValue, Add, setEditMode, inProgress, completed }) {\n\n\n    const [warning, setWarning] = React.useState(false)\n\n\n\n    function KeyDown(evt) {\n\n        if (evt.key === \"Enter\" && !warning) {\n            Add()\n            setWarning(false)\n        }\n    }\n\n    return (\n        <div className={ap.box}>\n\n            {/* <div className={ap.todo_App}>\n                {\n                    !todos.length ?\n                        <>\n                            <div className={ap.createItem_box}>\n                                <p className={ap.createItem}>Please Create Item</p>\n                            </div>\n                            <InputCreate editMode={editMode}\n                                setValue={setValue}\n                                setEditMode={setEditMode}\n                                value={value}\n                                KeyDown={KeyDown}\n                                Add={Add}\n                                warning={warning}\n                                setWarning={setWarning}\n                            />\n                        </>\n                        :\n                        <Routes>\n                            <Route path='' element={\n                                <>\n                                    <Listitem todos={todos} Removed={Removed} onChange={(newTodo) => {\n\n                                        setTodos(todos.map((todo) => {\n                                            if (todo.id === newTodo.id) {\n                                                return newTodo\n                                            } else {\n\n                                                return todo\n                                            }\n                                        }))\n                                    }} />\n                                    <InputCreate editMode={editMode}\n                                        setValue={setValue}\n                                        setEditMode={setEditMode}\n                                        value={value}\n                                        KeyDown={KeyDown}\n                                        Add={Add}\n                                        warning={warning}\n                                        setWarning={setWarning}\n                                    />\n                                </>} />\n\n                            <Route path='/completed' element={<Listitem todos={completed} Removed={Removed} onChange={(newTodo) => {\n                                setTodos(todos.map((todo) => {\n                                    if (todo.id === newTodo.id) {\n                                        return newTodo\n                                    } else {\n                                        return todo\n                                    }\n                                }))\n                            }} />} />\n\n                            <Route path='/inProgress' element={<Listitem todos={inProgress} Removed={Removed} onChange={(newTodo) => {\n                                setTodos(todos.map((todo) => {\n                                    if (todo.id === newTodo.id) {\n                                        return newTodo\n                                    } else {\n                                        return todo\n                                    }\n                                }))\n                            }} />} />\n\n\n                        </Routes>\n                }\n            </div> */}\n\n        </div>\n    )\n}\n"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,EAAP,MAAe,oBAAf;;AAKA,eAAe,SAASC,KAAT,OAA2H;EAAA;;EAAA,IAA5G;IAACC,SAAD;IAAYC,KAAZ;IAAmBC,OAAnB;IAA4BC,QAA5B;IAAsCC,QAAtC;IAAgDC,KAAhD;IAAuDC,QAAvD;IAAiEC,GAAjE;IAAsEC,WAAtE;IAAmFC,UAAnF;IAA+FC;EAA/F,CAA4G;EAGtI,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAA9B;;EAIA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;IAElB,IAAIA,GAAG,CAACC,GAAJ,KAAY,OAAZ,IAAuB,CAACL,OAA5B,EAAqC;MACjCJ,GAAG;MACHK,UAAU,CAAC,KAAD,CAAV;IACH;EACJ;;EAED,oBACI;IAAK,SAAS,EAAEd,EAAE,CAACmB;EAAnB;IAAA;IAAA;IAAA;EAAA,QADJ;AAyEH;;GAxFuBlB,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}